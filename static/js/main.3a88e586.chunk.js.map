{"version":3,"sources":["reportWebVitals.js","store/translations/translationsSlice.js","store/strategy/strategySlice.service.js","utils/status.js","store/strategy/strategySlice.js","store/index.js","containers/Navbar/ApplicationInformations/mockup.svg","containers/Navbar/ApplicationInformations/index.js","containers/Navbar/Menu/MenuElement/index.js","containers/Topbar/index.js","views/About/index.js","views/Content/index.js","views/Homepage/index.js","config.js","containers/Navbar/Menu/index.js","containers/Navbar/index.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","translationsSlice","createSlice","name","initialState","reducers","setTranslations","state","action","messages","payload","actions","STRATEGY_TYPE","ASSET_TYPE","Map","strategy","wallet","tickers","analyse","preconisation","undefined","status","STATUS","userStrategySlice","changeSelectedStrategy","changeSelectedWallet","addSelection","addAssetAnalyse","setAnalyseLoading","rootReducer","combineReducers","userStrategy","userStrategyReducer","translations","translationsReducer","ApplicationName","className","src","logo","alt","MenuElement","url","icon","size","to","Topbar","componentName","About","Content","Homepage","configuration","path","faHome","component","faCalendar","faUser","Menu","map","componentConf","Navbar","App","exact","store","configureStore","reducer","devTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a88e586.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst translationsSlice = createSlice({\n    name: 'Translations',\n    initialState: {},\n    reducers: {\n        setTranslations(state, action) {\n            return {...state, messages: action.payload}\n        },\n    }\n})\n\nexport const {\n    setTranslations\n} = translationsSlice.actions;\nexport default translationsSlice.reducer;\n","export const STRATEGY_TYPE = {\n  DMA: \"DMA\",\n  PAPA_BEAR: \"Papa bear\",\n  MAMA_BEAR: \"Mama bear\",\n  RP: \"RP\"\n}\n\nexport const WALLET_TYPE = {\n  PEA: \"PEA\",\n  EURO: \"Euro\",\n  US: \"US\",\n}\n\nexport const ASSET_TYPE = {\n  COMMODITIES: \"COMMODITIES\",\n  REAL_ESTATE: \"REAL_ESTATE\",\n  GOLD: \"GOLD\",\n  US_STOCKS: \"US_STOCKS\",\n  EX_US_STOCKS: \"EX_US_STOCKS\",\n  LARGE_CAP_STOCKS: \"LARGE_CAP_STOCKS\",\n  LARGE_CAP_VALUES_STOCKS: \"LARGE_CAP_VALUES_STOCKS\",\n  LARGE_CAP_GROWTH_STOCKS: \"LARGE_CAP_GROWTH_STOCKS\",\n  SMALL_CAP_STOCKS: \"SMALL_CAP_STOCKS\",\n  SMALL_CAP_VALUES_STOCKS: \"SMALL_CAP_VALUES_STOCKS\",\n  SMALL_CAP_GROWTH_STOCKS: \"SMALL_CAP_GROWTH_STOCKS\",\n  DEVELOPED_MARKETS_STOCKS: \"DEVELOPED_MARKETS_STOCKS\",\n  EMERGING_MARKETS_STOCKS: \"EMERGING_MARKETS_STOCKS\",\n  LONG_TERM_BONDS: \"LONG_TERM_BONDS\",\n  LONG_TERM_BONDS_EXTENDED: \"LONG_TERM_BONDS_EXTENDED\",\n  MID_TERM_BONDS: \"MID_TERM_BONDS\",\n  SHORT_TERM_BONDS: \"SHORT_TERM_BONDS\",\n  CORPORATE_BONDS: \"CORPORATE_BONDS\",\n  HIGH_YIELD_BONDS: \"HIGH_YIELD_BONDS\",\n  TIPS: \"TIPS\"\n}\n\nexport const Strategies = new Map([\n  [STRATEGY_TYPE.DMA , [\n    ASSET_TYPE.US_STOCKS,\n    ASSET_TYPE.EX_US_STOCKS,\n    ASSET_TYPE.LONG_TERM_BONDS,\n    ASSET_TYPE.TIPS,\n  ]],\n  [STRATEGY_TYPE.PAPA_BEAR, [\n    ASSET_TYPE.COMMODITIES,\n    ASSET_TYPE.REAL_ESTATE,\n    ASSET_TYPE.GOLD,\n    ASSET_TYPE.LARGE_CAP_VALUES_STOCKS,\n    ASSET_TYPE.LARGE_CAP_GROWTH_STOCKS,\n    ASSET_TYPE.SMALL_CAP_VALUES_STOCKS,\n    ASSET_TYPE.SMALL_CAP_GROWTH_STOCKS,\n    ASSET_TYPE.DEVELOPED_MARKETS_STOCKS,\n    ASSET_TYPE.EMERGING_MARKETS_STOCKS,\n    ASSET_TYPE.LONG_TERM_BONDS,\n    ASSET_TYPE.LONG_TERM_BONDS_EXTENDED,\n    ASSET_TYPE.MID_TERM_BONDS,\n    ASSET_TYPE.CORPORATE_BONDS\n  ]],\n  [STRATEGY_TYPE.MAMA_BEAR , [\n    ASSET_TYPE.LARGE_CAP_STOCKS,\n    ASSET_TYPE.SMALL_CAP_STOCKS,\n    ASSET_TYPE.DEVELOPED_MARKETS_STOCKS,\n    ASSET_TYPE.REAL_ESTATE,\n    ASSET_TYPE.COMMODITIES,\n    ASSET_TYPE.GOLD,\n    ASSET_TYPE.LONG_TERM_BONDS,\n    ASSET_TYPE.SHORT_TERM_BONDS,\n    ASSET_TYPE.EMERGING_MARKETS_STOCKS,\n  ]],\n  [STRATEGY_TYPE.RP , [\n    ASSET_TYPE.US_STOCKS,\n    ASSET_TYPE.US_STOCKS,\n    ASSET_TYPE.US_STOCKS,\n    ASSET_TYPE.US_STOCKS,\n    ASSET_TYPE.LONG_TERM_BONDS,\n    ASSET_TYPE.HIGH_YIELD_BONDS,\n  ]]\n]);\n\nexport const initialState = {\n  strategy: STRATEGY_TYPE.DMA,\n  wallet: WALLET_TYPE.PEA,\n  tickers: {},\n  analyse: [],\n  preconisation : undefined,\n  status: undefined\n}\n","export const STATUS = {\n  DONE: 'STATUS/DONE',\n  ERROR: 'STATUS/ERROR',\n  LOADING: 'STATUS/LOADING'\n}\n","import {createSlice} from \"@reduxjs/toolkit\";\nimport {initialState} from \"./strategySlice.service\";\nimport {STATUS} from \"../../utils/status\";\n\nconst userStrategySlice = createSlice({\n  name: 'UserStrategy',\n  initialState: initialState,\n  reducers: {\n    changeSelectedStrategy(state, action) {\n      return {...state, strategy: action.payload}\n    },\n    changeSelectedWallet(state, action) {\n      return {...state, wallet: action.payload}\n    },\n    addSelection(state, action) {\n      return {...state, tickers: {...action.payload}}\n    },\n    addAssetAnalyse(state, action) {\n      return {...state, analyse: [ ...state.analyse, {...action.payload}], status: STATUS.DONE}\n    },\n    setAnalyseLoading(state) {\n      return {...state, status: STATUS.LOADING}\n    }\n  }\n})\n\nexport const {\n  changeSelectedStrategy,\n  changeSelectedWallet,\n  addAssetAnalyse,\n  setAnalyseLoading,\n} = userStrategySlice.actions;\nexport default userStrategySlice.reducer;\n","import {combineReducers} from '@reduxjs/toolkit'\nimport translationsReducer from \"./translations/translationsSlice\";\nimport userStrategyReducer from \"./strategy/strategySlice\";\n\nconst rootReducer = combineReducers({\n    userStrategy: userStrategyReducer,\n    translations: translationsReducer\n})\n\nexport default rootReducer;\n","export default __webpack_public_path__ + \"static/media/mockup.7020e85e.svg\";","import React from 'react';\nimport logo from './mockup.svg';\nimport './ApplicationInformations.scss'\n\nconst ApplicationName = () => {\n  return (\n    <div className='application-informations'>\n      <img src={logo} alt='INSERT NAME'/>\n      <h1>INSERT NAME</h1>\n    </div>\n  );\n};\n\nexport default ApplicationName;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './menuElement.scss'\n\nconst MenuElement = ({logo, name, url }) => {\n  return (\n    <div className='menu-element'>\n      <div className=\"logo-wrapper\">\n        <FontAwesomeIcon icon={logo} size='lg'/>\n      </div>\n      <Link to={url}>{name}</Link>\n    </div>\n  );\n};\n\nexport default MenuElement;","import React from 'react';\nimport './topbar.scss'\n\nconst Topbar = ({componentName}) => {\n  return (\n    <div className='topbar'>\n      <h2>{componentName}</h2>\n    </div>\n  );\n};\n\nexport default Topbar;\n","import React from \"react\";\nimport Topbar from \"../../containers/Topbar\";\nimport './about.scss'\n\nconst About = () => {\n  return (\n    <section className='about'>\n      <Topbar componentName='About'/>\n      <h1>Welcome in About Component !</h1>\n    </section>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport Topbar from \"../../containers/Topbar\";\nimport './content.scss'\n\nconst Content = () => {\n  return (\n    <section className='content'>\n      <Topbar componentName='Content'/>\n      <h1>Welcome in content Component !</h1>\n    </section>\n  );\n};\n\nexport default Content;\n","import React from 'react';\nimport Topbar from \"../../containers/Topbar\";\nimport './homepage.scss'\n\nconst Homepage = () => {\n  return (\n    <section className='homepage'>\n      <Topbar componentName='Homepage'/>\n      <h1>Welcome ! This is the Homepage !</h1>\n    </section>\n  );\n};\n\nexport default Homepage;\n","import About from \"./views/About\";\nimport Content from \"./views/Content\";\nimport Homepage from \"./views/Homepage\";\nimport {faCalendar, faHome, faUser} from \"@fortawesome/free-solid-svg-icons\";\n\nexport const configuration = [\n  {\n    name: 'Home',\n    path: '/',\n    logo: faHome,\n    component: Homepage\n  },\n  {\n    name: 'Content',\n    path: '/content',\n    logo: faCalendar,\n    component: Content\n  },\n  {\n    name: 'About',\n    path: '/about',\n    logo: faUser,\n    component: About\n  }\n]\n","import React from 'react';\nimport MenuElement from \"./MenuElement\";\nimport {configuration} from \"../../../config\";\nimport './menu.scss'\n\nconst Menu = () => {\n  return (\n    <nav>\n      {configuration.map(componentConf => <MenuElement name={componentConf.name} url={componentConf.path} logo={componentConf.logo}/>)}\n    </nav>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport ApplicationInformations from \"./ApplicationInformations\";\nimport Menu from \"./Menu\";\nimport './navbar.scss'\n\nconst Navbar = () => {\n  return (\n    <section className='navbar'>\n      <ApplicationInformations />\n      <Menu />\n    </section>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Navbar from \"./containers/Navbar\";\nimport {configuration} from \"./config\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Navbar />\n      <section className='main-content'>\n        <Switch>\n          {configuration.map(componentConf => <Route path={componentConf.path} component={componentConf.component} exact/>)}\n        </Switch>\n      </section>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport reportWebVitals from './reportWebVitals';\nimport rootReducer from \"./store\";\nimport App from './App';\nimport './index.css';\n\nconst store = configureStore({\n    reducer: rootReducer,\n    devTools: true\n})\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}